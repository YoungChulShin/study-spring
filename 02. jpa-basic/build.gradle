plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'study.backend.java'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// request validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// log
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation "commons-io:commons-io:2.13.0"
	implementation "com.google.guava:guava:32.0.1-jre"

	// util library
	implementation 'org.apache.commons:commons-lang3'
	implementation 'commons-io:commons-io:2.11.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// querydsl 결과를 저장하기 위한 설정
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
